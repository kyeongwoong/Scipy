# 선형 대수(linear algebra) : 데이터 분석에 필요한 여러 계산을 돕기 위한 학문

# 데이터 유형 : 스칼라(scalar), 벡터(vector), 행렬(matrix)
# 스칼라 : 하나의 숫자로 이루어진 데이터
# 벡터 : 여러개의 숫자로 이루어진 데이터(data record)
# 행렬 : 벡터가 여러개 있는 데이터 집합

import numpy as np
# numpy에서 벡터를 표현 할때
# 벡터를 열의 개수가 하나인 2차원 배열 객체로 표현 하는 것이 올바르다.

x1 =np.array([[2.1],[2.2],[2.3]]) # 넘파이로 벡터를 표현
print(x1)
print('--------')
# numpy에서는 1차원 배열 객체도 대부분 벡터로 인정한다.
x1=np.array([2.1, 2.2, 2.3])
print(x1)


# 행렬 : 하나의 데이터 레코드를 단독으로 벡터로 나타낼때는 하나의 열로 나타낸다.
# 복수의 데이터 레코드 집합을 행렬로 표현 할 때는 하나의 데이터 레코드가 행으로 표현
# 하나의 데이터 레코드를 벡터로 표현할 때도 하나의 열로 나타낸다.

# 전치 연산 : 행렬에서 가장 기본이 되는 연산이다. 행과 열을 바꾸는 연산

# 전치 연산으로 만들어진 행렬을 원래 행렬에 대한 "전치행렬"이라고 한다.

# 벡터 x에 대한 전치 연산을 적용하여 만든 xT는 행의 수가 1인 행렬이므로
# 행 벡터(row vector)라고 한다.

import numpy as np
x1 = np.array([[2.2], [3.3], [4.4], [5.5]])
print(x1)

# T메소드(method)가 아니라 속성(attribute)이므로 소괄호( )를 붙이지 않는다.
print(x1.T)

print("----------")
x2 = np.array([1,2,3,4])
print(x2)
print(x2.T) # 1차원 ndarray는 전치 연산이 정의되지 않는다.

# 행렬의 행 표기와 열 표기

# 특수벡터 (0벡터, 1벡터)

# 정방행렬: 행의 개수와 열의 개수가 같은 행렬(square matrix)
# 대각행렬: numpy의 diag명령으로 만들 수 있다.

# 단위행렬: 대각행렬 중에서 모든 대각 성분의 값이 1인 대각행렬을 말한다.
# (identity matrix)라고 한다. 대문자 I로 표현하다.

i = np.identity(3)
print(i)

i2 = np.eye(4)
print(i2)

# 대칭 행렬 : 전치 연산을 통해서 얻은 전치행렬과 원래의 행렬이 같은 경우
# 이행렬은 대칭 행렬(symmetric matrix)이라고 한다.
# 단, 대칭행렬은 정방 행렬만이 될 수 있다.





